<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

  <!-- Turn on annotation configuration support for all beans in this application context -->
  <context:annotation-config/>
  <tx:annotation-driven/>

  <!-- Import the external services properties -->
  <bean id="configProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
    p:location="classpath:config.properties" p:systemPropertiesModeName="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>

  <!-- Create the XA-aware data sources -->
  <bean id="dataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource" init-method="init" destroy-method="close"
    p:uniqueName="xadb1" p:minPoolSize="10" p:maxPoolSize="50" p:preparedStatementCacheSize="50" depends-on="liquibase">
    <property name="testQuery" value="SELECT 1"/>
    <property name="className" value="${jdbc.xaDataSourceClassName}"/>
    <property name="driverProperties">
      <props>
        <prop key="serverName">${jdbc.serverName}</prop>
        <prop key="portNumber">${jdbc.portNumber}</prop>
        <prop key="databaseName">${jdbc.databaseName}</prop>
        <prop key="user">${jdbc.username}</prop>
        <prop key="password">${jdbc.password}</prop>
      </props>
    </property>
  </bean>

  <!-- This bean will ensure that the database schema is up to date -->
  <bean id="liquibase" class="liquibase.spring.SpringLiquibase" p:changeLog="classpath:dbschema.xml" p:contexts="${liquibase.contexts:development}">
    <property name="dataSource">
      <bean parent="dataSource" p:uniqueName="xadb-schema" p:minPoolSize="0" p:maxPoolSize="1"
        p:preparedStatementCacheSize="0" p:allowLocalTransactions="true" p:shareTransactionConnections="true">
        <property name="driverProperties">
          <props merge="true">
            <prop key="user">${jdbc.username-super}</prop>
            <prop key="password">${jdbc.password-super}</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

  <!-- Create the JTA beans -->
  <bean id="btmConfig" class="bitronix.tm.TransactionManagerServices" factory-method="getConfiguration" p:serverId="${jdbc.uniqueMachineID}"
    p:logPart1Filename="${user.home}/.btm/btm1.tlog" p:logPart2Filename="${user.home}/.btm/btm2.tlog"
    p:warnAboutZeroResourceTransaction="false"/>
  <bean class="bitronix.tm.TransactionManagerServices" factory-method="getTransactionManager" destroy-method="shutdown"
    depends-on="btmConfig"/>

  <!-- Create the transaction manager -->
  <bean id="bitronixTransactionManager" factory-method="getTransactionManager" class="bitronix.tm.TransactionManagerServices"
    depends-on="btmConfig" destroy-method="shutdown"/>

  <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
    <property name="transactionManager" ref="bitronixTransactionManager"/>
    <property name="userTransaction" ref="bitronixTransactionManager"/>
  </bean>


</beans>